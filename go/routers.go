/*
 * API Pagos Instant√°neos
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v3.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name		string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method		string
	// Pattern is the pattern of the URI.
	Pattern	 	string
	// HandlerFunc is the handler function of this route.
	HandlerFunc	gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	return NewRouterWithGinEngine(gin.Default(), handleFunctions)
}

// NewRouter add routes to existing gin engine.
func NewRouterWithGinEngine(router *gin.Engine, handleFunctions ApiHandleFunctions) *gin.Engine {
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the DefaultAPI part of the API
	DefaultAPI DefaultAPI
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{ 
		{
			"DeletePaymentById",
			http.MethodDelete,
			"/v3/payments/:id",
			handleFunctions.DefaultAPI.DeletePaymentById,
		},
		{
			"GetBanks",
			http.MethodGet,
			"/v3/banks",
			handleFunctions.DefaultAPI.GetBanks,
		},
		{
			"GetMerchantPaymentMethodsById",
			http.MethodGet,
			"/v3/merchants/:id/paymentMethods",
			handleFunctions.DefaultAPI.GetMerchantPaymentMethodsById,
		},
		{
			"GetPaymentById",
			http.MethodGet,
			"/v3/payments/:id",
			handleFunctions.DefaultAPI.GetPaymentById,
		},
		{
			"GetPredict",
			http.MethodGet,
			"/v3/predict",
			handleFunctions.DefaultAPI.GetPredict,
		},
		{
			"PostPayment",
			http.MethodPost,
			"/v3/payments",
			handleFunctions.DefaultAPI.PostPayment,
		},
		{
			"PostPaymentConfirmById",
			http.MethodPost,
			"/v3/payments/:id/confirm",
			handleFunctions.DefaultAPI.PostPaymentConfirmById,
		},
		{
			"PostPaymentRefundsById",
			http.MethodPost,
			"/v3/payments/:id/refunds",
			handleFunctions.DefaultAPI.PostPaymentRefundsById,
		},
		{
			"PostReceiver",
			http.MethodPost,
			"/v3/receivers",
			handleFunctions.DefaultAPI.PostReceiver,
		},
	}
}
